admincontrollerBoundaryTestShouldRetrieveAllUsers=true
admincontrollerBoundaryTestShouldRetrieveAllProducts=true
admincontrollerBoundaryTestShouldRetrieveAllOrders=true
admincontrollerBoundaryTestShouldRetrieveAllBlogPosts=true
admincontrollerBoundaryTestShouldReturnA500ErrorWhenRetrievingUsersFails=true
admincontrollerBoundaryTestShouldReturnA500ErrorWhenRetrievingProductsFails=true
admincontrollerBoundaryTestShouldReturnA500ErrorWhenRetrievingOrdersFails=true
admincontrollerBoundaryTestShouldReturnA500ErrorWhenRetrievingBlogPostsFails=true
productcontrollerBoundaryTestShouldCreateANewProduct=true
productcontrollerBoundaryTestShouldRetrieveAProductById=true
productcontrollerBoundaryTestShouldUpdateAProductById=true
productcontrollerBoundaryTestShouldDeleteAProductById=true
productcontrollerBoundaryTestShouldReturnA404ErrorWhenGettingProductWithInvalidId=true
productcontrollerBoundaryTestShouldReturnA404ErrorWhenUpdatingProductWithInvalidId=true
productcontrollerBoundaryTestShouldReturnA404ErrorWhenDeletingProductWithInvalidId=true
productcontrollerBoundaryTestShouldUpdateAProductById=true
productcontrollerBoundaryTestShouldDeleteAProductById=true
productcontrollerBoundaryTestShouldReturnA404ErrorWhenGettingProductByInvalidId=true
productcontrollerBoundaryTestShouldReturnA404ErrorWhenUpdatingProductByInvalidId=true
productcontrollerBoundaryTestShouldReturnA404ErrorWhenDeletingProductWithInvalidId=true
productcontrollerBoundaryTestShouldRetrieveAllProducts=true
productcontrollerBoundaryTestShouldHandleErrorWhenRetrievingAllProducts=true
productcontrollerBoundaryTestShouldRetrieveTopRatedProducts=true
productcontrollerBoundaryTestShouldHandleErrorWhenRetrievingTopRatedProducts=true
productcontrollerBoundaryTestShouldSearchForProductsByNameAndDescription=true
productcontrollerBoundaryTestShouldHandleErrorWhenSearchingForProducts=true
productcontrollerBoundaryTestShouldApplyADiscountToTheCart=true
productcontrollerBoundaryTestShouldHandleErrorWhenApplyingADiscount=true
productcontrollerBoundaryTestShouldCheckoutTheCartForAUser=true
productcontrollerBoundaryTestShouldHandleErrorWhenCheckingOutTheCart=true
productcontrollerBoundaryTestShouldAddAProductToTheCartForAUser=true
productcontrollerBoundaryTestShouldHandleErrorWhenAddingAProductToTheCart=true
productcontrollerBoundaryTestShouldViewTheCartForAUser=true
productcontrollerBoundaryTestShouldHandleErrorWhenViewingTheCart=true
productcontrollerBoundaryTestShouldUpdateACartItemForAUser=true
productcontrollerBoundaryTestShouldHandleErrorWhenUpdatingACartItem=true
productcontrollerBoundaryTestShouldRemoveACartItemForAUser=true
productcontrollerBoundaryTestShouldHandleErrorWhenRemovingACartItem=true
userscontrollerBoundaryTestShouldCreateANewUser=true
userscontrollerBoundaryTestShouldReturnA400ErrorIfEmailIsAlreadyInUse=true
userscontrollerBoundaryTestShouldRetrieveAUserProfileById=true
userscontrollerBoundaryTestShouldUpdateAUserProfileById=true
userscontrollerBoundaryTestShouldDeleteAUserById=true
userscontrollerBoundaryTestShouldReturnA404ErrorWhenGettingUserProfileWithInvalidId=true
userscontrollerBoundaryTestShouldReturnA404ErrorWhenUpdatingUserProfileWithInvalidId=true
userscontrollerBoundaryTestShouldReturnA404ErrorWhenDeletingUserWithInvalidId=true
userscontrollerBoundaryTestShouldReturnA400ErrorWhenCreatingANewUserWithMissingRequiredFields=true
userscontrollerBoundaryTestShouldCreateANewUserSuccessfully=true
userscontrollerBoundaryTestShouldChangeUserPasswordById=true
userscontrollerBoundaryTestShouldReturnA400ErrorWhenChangingUserPasswordWithMissingNewpassword=true
userscontrollerBoundaryTestShouldReturnA500ErrorWhenFailingToChangeUserPassword=true
userscontrollerBoundaryTestShouldRetrieveUserFavoritesById=true
userscontrollerBoundaryTestShouldReturnA500ErrorWhenFailingToRetrieveUserFavorites=true
userscontrollerBoundaryTestShouldRetrieveUserActivityById=true
userscontrollerBoundaryTestShouldReturnA500ErrorWhenFailingToRetrieveUserActivity=true
userscontrollerBoundaryTestShouldRetrieveAUserByEmail=true
userscontrollerBoundaryTestShouldReturnA500ErrorWhenFailingToRetrieveUserByEmail=true
ordercontrollerBoundaryTestShouldCreateANewOrder=true
ordercontrollerBoundaryTestShouldRetrieveAnOrderById=true
ordercontrollerBoundaryTestShouldUpdateAnOrderById=true
ordercontrollerBoundaryTestShouldDeleteAnOrderById=true
ordercontrollerBoundaryTestShouldReturnA404ErrorWhenGettingAnOrderWithInvalidId=true
ordercontrollerBoundaryTestShouldReturnA404ErrorWhenUpdatingAnOrderWithInvalidId=true
ordercontrollerBoundaryTestShouldReturnA404ErrorWhenDeletingAnOrderWithInvalidId=true
ordercontrollerBoundaryTestShouldReturnA500ErrorWhenCreatingAnOrderFails=true
ordercontrollerBoundaryTestShouldReturnA404ErrorWhenDeletingAnOrderWithInvalidId=true
ordercontrollerBoundaryTestShouldRetrieveUser'sOrdersByUserId=true
ordercontrollerBoundaryTestShouldCancelAnOrderById=true
ordercontrollerBoundaryTestShouldRetrievePaymentDetailsForAnOrderById=true
ordercontrollerBoundaryTestShouldProcessPaymentForAnOrderById=true
ordercontrollerBoundaryTestShouldRetrieveOrderAnalytics=true
ordercontrollerBoundaryTestShouldGenerateAnInvoiceForAnOrderById=true
ordercontrollerBoundaryTestShouldTrackShipmentForAnOrderById=true
ordercontrollerBoundaryTestShouldRetrieveRevenueAnalytics=true
blogcontrollerBoundaryTestShouldCreateANewBlogPost=true
blogcontrollerBoundaryTestShouldRetrieveABlogPostById=true
blogcontrollerBoundaryTestShouldUpdateABlogPostById=true
blogcontrollerBoundaryTestShouldDeleteABlogPostById=true
blogcontrollerBoundaryTestShouldReturnA404ErrorWhenGettingABlogPostWithInvalidId=true
blogcontrollerBoundaryTestShouldReturnA404ErrorWhenUpdatingABlogPostWithInvalidId=true
blogcontrollerBoundaryTestShouldReturnA404ErrorWhenDeletingABlogPostWithInvalidId=true
blogcontrollerBoundaryTestShouldReturnA500ErrorWhenCreatingABlogPostFails=true
blogcontrollerBoundaryTestShouldReturnA404ErrorWhenDeletingABlogPostWithInvalidId=true
blogcontrollerBoundaryTestShouldAddACommentToABlogPost=true
blogcontrollerBoundaryTestShouldEditACommentOnABlogPost=true
blogcontrollerBoundaryTestShouldDeleteACommentOnABlogPost=true
blogcontrollerBoundaryTestShouldGetAListOfAllBlogCategories=true
blogcontrollerBoundaryTestShouldGetTheCommentCountOfABlogPost=true
blogcontrollerBoundaryTestShouldAddACommentToABlogPost=true
blogcontrollerBoundaryTestShouldEditACommentOnABlogPost=true
blogcontrollerBoundaryTestShouldDeleteACommentOnABlogPost=true
