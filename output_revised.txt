adminserviceFunctionalTestShouldGetAllUsers=true
adminserviceFunctionalTestShouldGetAllProducts=true
adminserviceFunctionalTestShouldGetAllOrders=true
adminserviceFunctionalTestShouldGetAllBlogs=true
adminserviceFunctionalTestShouldThrowAnErrorWhenFailingToGetAllUsers=true
adminserviceFunctionalTestShouldThrowAnErrorWhenFailingToGetAllProducts=true
adminserviceFunctionalTestShouldThrowAnErrorWhenFailingToGetAllOrders=true
adminserviceFunctionalTestShouldThrowAnErrorWhenFailingToGetAllBlogs=true
adminserviceFunctionalTestShouldGetFinancialReports=true
adminserviceFunctionalTestShouldGetPopularProductsReport=true
adminserviceFunctionalTestShouldGetUserEngagementReport=true
adminserviceFunctionalTestShouldThrowAnErrorWhenFailingToGetProductNamesDetails=true
adminserviceFunctionalTestShouldGenerateSalesReport=true
adminserviceFunctionalTestShouldThrowAnErrorWhenFailingToGenerateSalesReport=true
blogserviceFunctionalTestShouldCreateANewBlogPost=true
blogserviceFunctionalTestShouldGetBlogPostById=true
blogserviceFunctionalTestShouldUpdateBlogPostById=true
blogserviceFunctionalTestShouldDeleteBlogPostById=true
blogserviceFunctionalTestShouldThrowAnErrorWhenBlogPostIsNotFoundForGetblog=true
blogserviceFunctionalTestShouldThrowAnErrorWhenBlogPostIsNotFoundForUpdateblog=true
blogserviceFunctionalTestShouldThrowAnErrorWhenBlogPostIsNotFoundForDeleteblog=true
blogserviceFunctionalTestShouldThrowAnErrorWhenFailingToCreateABlogPost=true
blogserviceFunctionalTestShouldThrowAnErrorWhenFailingToUpdateABlogPostById=true
blogserviceFunctionalTestShouldThrowAnErrorWhenFailingToDeleteABlogPostById=true
blogserviceFunctionalTestShouldGetListOfAllBlogPosts=true
blogserviceFunctionalTestShouldGetPopularBlogPosts=true
blogserviceFunctionalTestShouldGetBlogCategoriesOrTags=true
blogserviceFunctionalTestShouldLikeABlogPost=true
blogserviceFunctionalTestShouldGetCommentCountOfABlogPost=true
blogserviceFunctionalTestShouldThrowAnErrorWhenFailingToGetListOfBlogPosts=true
productserviceFunctionalTestShouldCreateANewProduct=true
productserviceFunctionalTestShouldGetProductById=true
productserviceFunctionalTestShouldUpdateProductById=true
productserviceFunctionalTestShouldDeleteProductById=true
productserviceFunctionalTestShouldThrowAnErrorWhenProductIsNotFoundForGetproduct=true
productserviceFunctionalTestShouldThrowAnErrorWhenProductIsNotFoundForUpdateproduct=true
productserviceFunctionalTestShouldThrowAnErrorWhenProductIsNotFoundForDeleteproduct=true
productserviceFunctionalTestShouldFetchProductById=true
productserviceFunctionalTestShouldThrowAnErrorWhenFailingToCreateProduct=true
productserviceFunctionalTestShouldThrowAnErrorWhenFailingToUpdateProductById=true
productserviceFunctionalTestShouldThrowAnErrorWhenFailingToDeleteProductById=true
productserviceFunctionalTestShouldUpdateProductByIdAndReturnUpdatedProduct=true
productserviceFunctionalTestShouldSearchForProductsByNameAndDescription=true
productserviceFunctionalTestShouldThrowAnErrorWhenFailingToSearchForProducts=true
productserviceFunctionalTestShouldAddProductsToTheCart=true
productserviceFunctionalTestShouldUpdateItemQuantityInTheCart=true
productserviceFunctionalTestShouldRemoveItemFromTheCart=true
productserviceFunctionalTestShouldAddProductsToTheCart=true
productserviceFunctionalTestShouldUpdateItemQuantityInTheCart=true
productserviceFunctionalTestShouldRemoveItemFromTheCart=true
orderserviceFunctionalTestShouldCreateANewOrder=true
orderserviceFunctionalTestShouldGetOrderById=true
orderserviceFunctionalTestShouldUpdateOrderById=true
orderserviceFunctionalTestShouldDeleteOrderById=true
orderserviceFunctionalTestShouldThrowAnErrorWhenOrderIsNotFoundForGetorder=true
orderserviceFunctionalTestShouldThrowAnErrorWhenOrderIsNotFoundForUpdateorder=true
orderserviceFunctionalTestShouldThrowAnErrorWhenOrderIsNotFoundForDeleteorder=true
orderserviceFunctionalTestShouldThrowAnErrorWhenFailingToCreateAnOrder=true
orderserviceFunctionalTestShouldThrowAnErrorWhenFailingToUpdateAnOrderById=true
orderserviceFunctionalTestShouldThrowAnErrorWhenFailingToDeleteAnOrderById=true
orderserviceFunctionalTestShouldGetUser'sOrders=true
orderserviceFunctionalTestShouldCancelAnOrder=true
orderserviceFunctionalTestShouldRetrievePaymentDetailsForAnOrder=true
orderserviceFunctionalTestShouldGenerateAnInvoiceForAnOrder=true
orderserviceFunctionalTestShouldTrackShipmentDetailsForAnOrder=true
orderserviceFunctionalTestShouldRetrieveOrderAnalytics=true
orderserviceFunctionalTestShouldRetrieveRevenueAnalytics=true
orderserviceFunctionalTestShouldThrowAnErrorWhenFailingToRetrieveUser'sOrders=true
orderserviceFunctionalTestShouldThrowAnErrorWhenFailingToCancelAnOrder=true
orderserviceFunctionalTestShouldThrowAnErrorWhenFailingToRetrievePaymentDetails=true
orderserviceFunctionalTestShouldThrowAnErrorWhenFailingToProcessPayment=true
orderserviceFunctionalTestShouldThrowAnErrorWhenFailingToGenerateAnInvoice=true
orderserviceFunctionalTestShouldThrowAnErrorWhenFailingToTrackShipmentDetails=true
orderserviceFunctionalTestShouldThrowAnErrorWhenFailingToRetrieveOrderAnalytics=true
orderserviceFunctionalTestShouldThrowAnErrorWhenFailingToRetrieveRevenueAnalytics=true
usersserviceFunctionalTestShouldCreateANewUser=true
usersserviceFunctionalTestShouldGetUserProfileById=true
usersserviceFunctionalTestShouldThrowAnErrorWhenFailingToFetchUserByEmail=true
usersserviceFunctionalTestShouldUpdateUserProfileById=true
usersserviceFunctionalTestShouldDeleteUserById=true
usersserviceFunctionalTestShouldThrowAnErrorWhenUserIsNotFoundForGetuserprofile=true
usersserviceFunctionalTestShouldThrowAnErrorWhenUserIsNotFoundForUpdateuserprofile=true
usersserviceFunctionalTestShouldThrowAnErrorWhenUserIsNotFoundForDeleteuser=true
usersserviceFunctionalTestShouldThrowAnErrorWhenUserIsNotFoundForGetuserbyemail=true
usersserviceFunctionalTestShouldFetchUserByEmail=true
usersserviceFunctionalTestShouldFetchUserByEmail=true
usersserviceFunctionalTestShouldThrowAnErrorWhenGettingUserByNon-existingEmail=true
usersserviceFunctionalTestShouldThrowAnErrorWhenFailingToFetchUserByEmail=true
usersserviceFunctionalTestShouldGetUserActivityById=true
usersserviceFunctionalTestShouldThrowAnErrorWhenChangingPasswordForNon-existingUser=true
usersserviceFunctionalTestShouldThrowAnErrorWhenGettingUserActivityForNon-existingUser=true
usersserviceFunctionalTestShouldThrowAnErrorWhenGettingUserFavoritesForNon-existingUser=true
